[{"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/index.js":"1","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/App.js":"2","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/pages/Home/index.js":"3","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/routes/index.js":"4","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Processo/Listar.js":"5","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/services/index.js":"6","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/services/api.js":"7","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Processo/Cadastrar.js":"8"},{"size":486,"mtime":1611527902734,"results":"9","hashOfConfig":"10"},{"size":93,"mtime":1611095852543,"results":"11","hashOfConfig":"10"},{"size":2034,"mtime":1611531739247,"results":"12","hashOfConfig":"10"},{"size":392,"mtime":1611520625817,"results":"13","hashOfConfig":"10"},{"size":15140,"mtime":1611537894319,"results":"14","hashOfConfig":"10"},{"size":771,"mtime":1611535285659,"results":"15","hashOfConfig":"10"},{"size":53,"mtime":1611283860147,"results":"16","hashOfConfig":"10"},{"size":5473,"mtime":1611541289339,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ymjgbh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/index.js",[],["36","37"],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/App.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/pages/Home/index.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/routes/index.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Processo/Listar.js",["38"],"import { useState, useEffect } from \"react\";\nimport ProcessoService from \"../../services\";\nimport { Link } from 'react-router-dom';\nimport {\n    Avatar,\n    Box, Button, Card, CardActions, CardHeader, CardContent, Grid, IconButton, InputAdornment,\n    Paper, TextField, Typography,\n} from \"@material-ui/core\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from '@material-ui/icons/CloseRounded';\nimport \"../../pages/Home/index.css\";\n\nfunction Listar(props) {\n\n    const { location: { state: { pesquisa } = \"\" } = {} } = props;\n\n    const [processos, setProcessos] = useState([]);\n    const [processoSelecionado, setProcessoSelecionado] = useState({});\n    const [detalhe, setDetalhe] = useState(false);\n    const [busca, setBusca] = useState(pesquisa);\n\n    const handleSetProcesso = (processo) => {\n        setDetalhe(true);\n        setProcessoSelecionado(processo);\n    }\n\n    useEffect(() => {\n        handleBuscarProcessos();\n    }, []);\n\n    const handleBuscarProcessos = () => {\n\n        ProcessoService.buscarProcessos(busca).then(processos => {\n            if (processos) {\n                setProcessos(processos);\n            }\n        }).catch(error => alert(error));\n\n    }\n\n    const handleExcluirProcesso = () => {\n\n        const resultado = window.confirm(`Deseja excluir o processo: ${processoSelecionado.numero}`);\n        if (resultado === true) {\n            ProcessoService.excluirProcesso(processoSelecionado.id).then((retorno) => {\n                setDetalhe(false);\n                handleBuscarProcessos();\n            }).catch(\n                error => alert(error)\n            );\n        }\n\n    }\n\n    return (\n        <Box component={Paper} p={3} elevation={0}>\n            <Box mb={2} elevation={0}>\n                <Grid container spacing={2} alignItems=\"flex-end\">\n                    <Grid item xs={1}>\n                        Busca de processos\n                    </Grid>\n                    <Grid item xs={4} >\n                        <TextField\n                            type=\"text\"\n                            name=\"pesquisa\"\n                            value={busca}\n                            onChange={(e) => setBusca(e.target.value)}\n                            autoComplete='off'\n                            label=\"Pesquise por uma informação do processo\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{\n                                width: \"100%\",\n                                boxShadow: \"0 3px 5px 2px rgb(196 196 196)\",\n                                borderRadius: \"5px\"\n                            }}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment>\n                                        <IconButton onClick={() => handleBuscarProcessos()}>\n                                            <SearchIcon />\n                                        </IconButton>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    </Grid>\n\n                    <Grid item xs={7}>\n\n                        <Button\n                            component={Link} to={{\n                                pathname: \"/cadastrar\"\n                            }}\n                            variant=\"outlined\" size=\"medium\" style={{\n                                height: \"2.5rem\",\n                                borderRadius: 0\n                            }}>\n                            Novo\n                        </Button>\n\n                    </Grid>\n                </Grid>\n            </Box>\n\n            <Box mb={2} elevation={0}>\n\n                <Grid container spacing={2} alignItems=\"flex-start\" style={{ border: \"0px solid green\" }}>\n                    <Grid item xs={1} />\n                    <Grid item xs={(detalhe && 4) || 10} >\n\n                        {processos.length > 0 && processos.map((processo, i) => (\n                            <Grid container spacing={2} alignItems=\"flex-start\" key={i} style={{ border: \"0px solid red\" }}>\n\n                                <Grid item xs={12} >\n\n                                    <Card variant=\"outlined\"\n                                        style={{ border: \"1px solid #005b95\", cursor: \"pointer\" }}\n                                        onClick={(e) => handleSetProcesso(processo)}>\n                                        <CardContent>\n                                            <Grid container alignItems=\"flex-start\">\n                                                {!detalhe &&\n                                                    <Grid item xs={1} >\n                                                        <Avatar variant=\"square\"\n                                                            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQkWFnt8-03BhQJzLon1y0PV3ZqcfHWysoJg&usqp=CAU\"\n                                                            style={{ height: '70px', width: '70px' }} />\n                                                    </Grid>\n                                                }\n\n                                                <Grid item xs={(detalhe && 6) || 2} style={{ padding: \"0.1rem\" }} >\n                                                    <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n                                                        Número\n                                                    </Typography>\n                                                    <Typography variant=\"body2\" component=\"p\">\n                                                        {processo.numero}\n                                                    </Typography>\n                                                </Grid>\n\n                                                <Grid item xs={(detalhe && 6) || 3} style={{ padding: \"0.1rem\" }} >\n                                                    <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n                                                        Assunto\n                                                    </Typography>\n                                                    <Typography variant=\"body2\" component=\"p\">\n                                                        {processo.assunto}\n                                                    </Typography>\n                                                </Grid>\n\n                                                <Grid item xs={(detalhe && 6) || 3} style={{ padding: \"0.1rem\" }} >\n                                                    <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n                                                        Interessado\n                                                    </Typography>\n                                                    <Typography variant=\"body2\" component=\"p\">\n                                                        {processo.interessados[0]}\n                                                    </Typography>\n                                                </Grid>\n\n                                                {!detalhe &&\n                                                    <Grid item xs={3}>\n                                                        <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n                                                            Descrição\n                                                        </Typography>\n                                                        <Typography variant=\"body2\" component=\"p\" style={{ textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", overflow: \"hidden\" }}>\n                                                            {processo.descricao}\n                                                        </Typography>\n                                                    </Grid>\n                                                }\n                                            </Grid>\n                                        </CardContent>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        ))}\n                    </Grid>\n                    {!detalhe &&\n                        <Grid item xs={1} />\n                    }\n\n                    {detalhe &&\n                        <Grid item xs={7} >\n\n                            <Card >\n                                <CardHeader\n                                    avatar={\n                                        <Avatar variant=\"square\"\n                                            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQkWFnt8-03BhQJzLon1y0PV3ZqcfHWysoJg&usqp=CAU\"\n                                            style={{ width: '100px', height: '100px', textAlign: \"center\", alignSelf: 'center' }}\n                                        />\n                                    }\n                                    action={\n                                        <IconButton onClick={(e) => setDetalhe(false)} aria-label=\"settings\">\n                                            <CloseIcon />\n                                        </IconButton>\n                                    }\n                                    title={\n                                        <Grid container spacing={1}>\n                                            <Grid item xs={6}>\n                                                <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n                                                    Processo\n                                                </Typography>\n                                                <Typography variant=\"body2\" component=\"p\">\n                                                    {processoSelecionado.numero}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={6}>\n                                                <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n                                                    Data\n                                                </Typography>\n                                                <Typography variant=\"body2\" component=\"p\">\n                                                    {processoSelecionado.entrada}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n                                                    Assunto\n                                                </Typography>\n                                                <Typography variant=\"body2\" component=\"p\">\n                                                    {processoSelecionado.assunto}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    }\n                                />\n                                <CardContent>\n\n                                    <Grid container spacing={1} style={{ padding: \"0.5rem\", paddingTop: \"0\" }}>\n                                        <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n                                            Interresados\n                                        </Typography>\n\n                                        <Grid item container >\n                                            {processoSelecionado.interessados && processoSelecionado.interessados.map((interessado, i) => (\n                                                <Grid item xs={6} key={i}>\n                                                    <Typography variant=\"body2\" >\n                                                        {interessado}\n                                                    </Typography>\n                                                </Grid>\n                                            ))}\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid container spacing={1} style={{ padding: \"0.5rem\" }}>\n                                        <Typography color=\"textSecondary\" display=\"block\" style={{ fontWeight: \"bold\" }}>\n                                            Descrição\n                                        </Typography>\n                                        <Grid container >\n                                            <Typography variant=\"body2\" component=\"p\">\n                                                {processoSelecionado.descricao}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n\n                                </CardContent>\n\n                                <CardActions style={{ justifyContent: 'flex-end' }} >\n                                    <Button\n                                        variant=\"outlined\"\n                                        size=\"medium\"\n                                        onClick={(e) => handleExcluirProcesso()}\n                                        style={{\n                                            height: \"2.5rem\",\n                                            borderRadius: 0\n                                        }}>Remover\n                                    </Button>\n                                    <Button\n                                        variant=\"outlined\"\n                                        size=\"medium\"\n                                        component={Link}\n                                        to={{\n                                            pathname: \"/cadastrar\",\n                                            state: { processo: processoSelecionado }\n                                        }}\n                                        style={{\n                                            height: \"2.5rem\",\n                                            borderRadius: 0\n                                        }}>Editar\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    }\n                </Grid>\n\n                {processos.length === 0 &&\n                    <Grid container spacing={2} alignItems=\"flex-end\">\n                        <Grid item xs={1} />\n                        <Grid item xs={11} >\n                            <Box mb={2} elevation={1}>\n                                Nenhum processo localizado\n                            </Box>\n                        </Grid>\n                    </Grid>\n                }\n            </Box>\n        </Box >\n    );\n}\n\nexport default Listar;","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/services/index.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/services/api.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Processo/Cadastrar.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":30,"column":8,"nodeType":"45","endLine":30,"endColumn":10,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleBuscarProcessos'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [handleBuscarProcessos]",{"range":"52","text":"53"},[961,963],"[handleBuscarProcessos]"]