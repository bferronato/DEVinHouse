[{"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/index.js":"1","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/App.js":"2","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/pages/Home/index.js":"3","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/util/constants.js":"4","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Cadastro/index.js":"5","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Listagem/index.js":"6","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Telefone.js":"7","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/routes/index.js":"8","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/H1.js":"9"},{"size":584,"mtime":1611114593821,"results":"10","hashOfConfig":"11"},{"size":93,"mtime":1611095852543,"results":"12","hashOfConfig":"11"},{"size":2977,"mtime":1611114764991,"results":"13","hashOfConfig":"11"},{"size":164,"mtime":1611095852553,"results":"14","hashOfConfig":"11"},{"size":9364,"mtime":1611095852544,"results":"15","hashOfConfig":"11"},{"size":2468,"mtime":1611095852545,"results":"16","hashOfConfig":"11"},{"size":853,"mtime":1611112628664,"results":"17","hashOfConfig":"11"},{"size":563,"mtime":1611114311249,"results":"18","hashOfConfig":"11"},{"size":112,"mtime":1611113990010,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ymjgbh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/index.js",["40"],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/App.js",[],["41","42"],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/pages/Home/index.js",["43","44","45","46","47","48","49"],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/util/constants.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Cadastro/index.js",["50"],"import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  Paper,\n  Select,\n  Typography,\n  TextField\n} from \"@material-ui/core\";\nimport Telefone from \"../Telefone\"\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport \"./index.css\";\n\nfunction Cadastro(props) {\n\n  const { aluno, setAluno, alunos, setAlunos, turmas, contatosEmergencia } = props;\n\n  console.log(aluno)\n\n  const [telefoneContatoResponsavel, setTelefoneContatoResponsavel] = useState(\n    { name: \"telefoneContatoResponsavel\", numero: aluno.telefoneContatoResponsavel, placeholder: \"Telefone responsável\" }\n  );\n\n\n  // const [telefoneEmergencia, setTelefoneEmergencia] = useState(\n  //   { name: \"telefoneEmergencia\", numero: \"\", placeholder: \"Telefone emergência\" }\n  // );\n  // const [autorizacaoUsoImagem, setAutorizacaoUsoImagem] = useState(true);\n\n  // let [contatoEmergencia, setContatoEmergencia] = useState();\n  // let [listaAutorizados, setListaAutorizados] = useState();\n\n  // useEffect(() => {\n  //   setTelefoneContatoResponsavel({ ...telefoneContatoResponsavel, numero: '99999999' })\n  // }, [telefoneContatoResponsavel]);\n\n  // useEffect(() => {\n  //   setTelefoneEmergencia({ ...telefoneEmergencia, numero: aluno.telefoneEmergencia, })\n  // }, [aluno.telefoneEmergencia]); \n\n  // const handleContatoEmergencia = (event) => {\n  //   setContatoEmergencia(event.target.value);\n  // };\n\n  // const handleListaAutorizados = (event) => {\n  //   setListaAutorizados(event.target.value);\n  // };\n\n\n  const handlePossuiRestricaoAlimentar = (checked) => {\n    setAluno((aluno) => ({\n      ...aluno,\n      \"possuiRestricaoAlimentar\": checked\n    }));\n  };\n\n  const handleAutorizacaoUsoImagem = (checked) => {\n    setAluno((aluno) => ({\n      ...aluno,\n      \"autorizacaoUsoImagem\": checked\n    }));\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setAluno((aluno) => ({\n      ...aluno,\n      [name]: value\n      // \"telefoneContatoResponsavel\": telefoneContatoResponsavel.numero,\n      // \"telefoneEmergencia\": telefoneEmergencia.numero,\n    }));\n\n  };\n\n  const handleNovoCadastro = () => {\n    setAluno({\n      id: 0,\n      nome: \"\",\n      dataNascimento: \"\",\n      nomeResponsavel: \"\",\n      // telefoneContatoResponsavel: \"\",\n      contatoCasoEmergencia: contatosEmergencia[0],\n      telefoneEmergencia: \"\",\n      possuiRestricaoAlimentar: false,\n      descricaoRestricaoAlimentar: \"\",\n      autorizacaoUsoImagem: true,\n      listaAutorizados: [],\n      turma: turmas[0],\n      observacao: \"\",\n    });\n  };\n\n  // const setPossuiRestricaoAlimentar = (event) => {\n  //   // const { value, name } = event.target;\n  //   aluno.possuiRestricaoAlimentar = !event\n  //   console.log(event)\n  //   // console.log(name)\n  // }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const existePessoa = alunos.some(item => item.id === aluno.id);\n\n    if (existePessoa) {\n\n      const result = alunos.map(item => {\n        if (item.id === aluno.id) {\n          return aluno;\n        } else {\n          return item;\n        }\n      });\n\n      setAlunos(result);\n\n    } else {\n\n      setAlunos([...alunos, { ...aluno, id: Math.random().toString(36).substr(2, 9), }]);\n\n    }\n\n    handleNovoCadastro();\n\n  };\n\n  return (\n    <Box component={Paper} p={2}>\n      <Typography component=\"h1\" variant=\"h6\" color=\"primary\" gutterBottom>\n        Cadastro\n      </Typography>\n      <Box component=\"form\" onSubmit={handleSubmit} >\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n          <TextField\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            margin=\"dense\"\n            label=\"Nome\"\n            value={aluno.nome}\n            name=\"nome\"\n            autoComplete=\"nome\"\n            onChange={handleChange}\n            style={{ width: \"69.5%\" }}\n          />\n          <TextField\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            margin=\"dense\"\n            label=\"Data de nascimento\"\n            name=\"dataNascimento\"\n            value={aluno.dataNascimento}\n            type=\"date\"\n            onChange={handleChange}\n            style={{ width: \"29.5%\" }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            margin=\"dense\"\n            label=\"Nome do responsável\"\n            name=\"nomeResponsavel\"\n            value={aluno.nomeResponsavel}\n            autoComplete=\"nomeResponsavel\"\n            onChange={handleChange}\n            style={{ width: \"69.5%\" }}\n          />\n          <Telefone\n            telefone={telefoneContatoResponsavel}\n            setTelefone={setTelefoneContatoResponsavel}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={aluno.possuiRestricaoAlimentar}\n                onChange={(e) => handlePossuiRestricaoAlimentar(e.target.checked)}\n                inputProps={{\n                  \"aria-label\": \"secondary checkbox\"\n                }}\n                color=\"primary\"\n              />}\n            label=\"Possui restrição alimentar\"\n          />\n          <FormControl variant=\"outlined\" margin=\"dense\" style={{ width: \"33%\" }}>\n            <InputLabel htmlFor=\"contatoCasoEmergencia\">Contato de emergência</InputLabel>\n            <Select\n              native\n              value={aluno.contatoCasoEmergencia}\n              onChange={handleChange}\n              label=\"Contato de emergência\"\n              inputProps={{\n                name: \"contatoCasoEmergencia\",\n                id: \"contatoCasoEmergencia\",\n              }}\n            >\n              {contatosEmergencia.map((contato, index) => (\n                <option key={index}>{contato}</option>\n              ))}\n            </Select>\n          </FormControl>\n          {/* <Telefone\n            telefone={telefoneEmergencia}\n            setTelefone={setTelefoneEmergencia}\n          /> */}\n          {aluno.possuiRestricaoAlimentar &&\n            <TextField\n              multiline\n              fullWidth\n              rows={2}\n              variant=\"outlined\"\n              margin=\"dense\"\n              value={aluno.descricaoRestricaoAlimentar}\n              label=\"Descrição das restrições alimentares\"\n              name=\"descricaoRestricaoAlimentar\"\n              autoComplete=\"descricaoRestricaoAlimentar\"\n              onChange={handleChange}\n            />\n          }\n          <FormControlLabel style={{ width: \"100%\" }}\n            control={\n              <Checkbox\n                checked={aluno.autorizacaoUsoImagem}\n                onChange={(e) => handleAutorizacaoUsoImagem(e.target.checked)}\n                inputProps={{\n                  \"aria-label\": \"secondary checkbox\"\n                }}\n                color=\"primary\"\n              />}\n            label=\"Autorização uso imagem\"\n          />\n          {/* <FormControl variant=\"outlined\" margin=\"dense\" style={{ width: \"49.5%\" }}>\n            <InputLabel htmlFor=\"turma\">Lista de autorizadores</InputLabel>\n            <Select\n              native\n              value={listaAutorizados}\n              onChange={handleListaAutorizados}\n              label=\"Lista de autorizadores\"\n              inputProps={{\n                name: \"listaAutorizados\",\n                id: \"listaAutorizados\",\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={10}>Pedro</option>\n              <option value={20}>joao</option>\n              <option value={30}>Maria</option>\n            </Select>\n          </FormControl> */}\n          <FormControl variant=\"outlined\" margin=\"dense\" style={{ width: \"49.5%\" }}>\n            <InputLabel htmlFor=\"turma\">Turma</InputLabel>\n            <Select\n              native\n              value={aluno.turma}\n              onChange={handleChange}\n              label=\"Turma\"\n              inputProps={{\n                name: \"turma\",\n                id: \"turma\",\n              }}\n            >\n              {turmas.map((nomeTurma, index) => (\n                <option key={index}>{nomeTurma}</option>\n              ))}\n            </Select>\n          </FormControl>\n          <TextField\n            name=\"observacao\"\n            label=\"Observação\"\n            margin=\"dense\"\n            value={aluno.observacao}\n            onChange={handleChange}\n            multiline\n            fullWidth\n            rows={4}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Box className=\"button-wrapper\">\n          <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n            <Button\n              startIcon={<PersonAdd />}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"button\"\n              onClick={handleNovoCadastro}>Novo</Button>\n            <Button\n              startIcon={<SaveIcon />}\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\">Salvar</Button>\n          </ButtonGroup>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Cadastro;","/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Listagem/index.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/Telefone.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/routes/index.js",[],"/Users/brunohenriqueferronato/Sites/DEVinHouse/Projeto02/busca-de-processos/src/components/H1.js",[],{"ruleId":"51","severity":1,"message":"52","line":6,"column":7,"nodeType":"53","messageId":"54","endLine":6,"endColumn":15},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"51","severity":1,"message":"59","line":4,"column":27,"nodeType":"53","messageId":"54","endLine":4,"endColumn":31},{"ruleId":"51","severity":1,"message":"60","line":9,"column":8,"nodeType":"53","messageId":"54","endLine":9,"endColumn":16},{"ruleId":"51","severity":1,"message":"61","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":16},{"ruleId":"51","severity":1,"message":"62","line":14,"column":10,"nodeType":"53","messageId":"54","endLine":14,"endColumn":16},{"ruleId":"51","severity":1,"message":"63","line":14,"column":18,"nodeType":"53","messageId":"54","endLine":14,"endColumn":27},{"ruleId":"51","severity":1,"message":"64","line":15,"column":10,"nodeType":"53","messageId":"54","endLine":15,"endColumn":15},{"ruleId":"51","severity":1,"message":"65","line":15,"column":17,"nodeType":"53","messageId":"54","endLine":15,"endColumn":25},{"ruleId":"51","severity":1,"message":"66","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":19},"no-unused-vars","'ambiente' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'Grid' is defined but never used.","'Cadastro' is defined but never used.","'Listagem' is defined but never used.","'alunos' is assigned a value but never used.","'setAlunos' is assigned a value but never used.","'aluno' is assigned a value but never used.","'setAluno' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]